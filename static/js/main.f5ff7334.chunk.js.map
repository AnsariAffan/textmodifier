{"version":3,"sources":["components/Nav.js","components/TextForm.js","components/About.js","components/Contact.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","className","href","type","id","to","TextForm","useState","text","settext","rows","value","onChange","event","target","onClick","newtext","toUpperCase","toLowerCase","split","length","About","color","backgroundColor","mystyle","setmystyle","btn","setbtn","style","Contact","class","for","placeholder","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOAqCeA,EAhCI,WACf,OACI,mCACI,qBAAKC,UAAU,8CAAf,SACI,sBAAKA,UAAU,kBAAf,UACI,mBAAGA,UAAU,eAAeC,KAAK,IAAjC,2BACA,wBAAQD,UAAU,iBAAiBE,KAAK,SAAS,iBAAe,WAAW,iBAAe,0BAA0B,gBAAc,yBAAyB,gBAAc,QAAQ,aAAW,oBAA5L,SACI,sBAAMF,UAAU,0BAEpB,qBAAKA,UAAU,2BAA2BG,GAAG,yBAA7C,SACI,qBAAIH,UAAU,kCAAd,UACI,oBAAIA,UAAU,WAAd,SACI,cAAC,IAAD,CAAMA,UAAU,kBAAkB,eAAa,OAAOI,GAAG,IAAzD,oBAEJ,oBAAIJ,UAAU,WAAd,SACI,cAAC,IAAD,CAAMA,UAAU,WAAWI,GAAG,WAA9B,qBAEJ,oBAAIJ,UAAU,WAAd,SACI,cAAC,IAAD,CAAMA,UAAU,WAAWI,GAAG,aAA9B,qCCuCjBC,EAvDS,WACpB,IAsBA,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAGA,OACI,qCACI,cAAC,EAAD,IACA,sBAAKR,UAAU,aAAf,UACI,sBAAKA,UAAU,YAAf,UACI,iDACA,0BAAUA,UAAU,gBAAgBG,GAAG,8BAA8BM,KAAK,IAAIC,MAAOH,EAAMI,SAbxF,SAACC,GAChBJ,EAAQI,EAAMC,OAAOH,aAcb,sBAAKV,UAAU,kBAAf,UACI,wBAAQE,KAAK,SAASC,GAAG,OAAOH,UAAU,gBAAgBc,QAlC9C,WAExB,IAAIC,EAAUR,EAAKS,cACnBR,EAAQO,IA+BI,mCACA,wBAAQb,KAAK,SAASC,GAAG,OAAOH,UAAU,oBAAoBc,QA7BjD,WAEzB,IAAIC,EAAUR,EAAKU,cACnBT,EAAQO,IA0BI,mCACA,wBAAQb,KAAK,SAASC,GAAG,OAAOH,UAAU,oBAAoBc,QAxB5D,WAGdN,EADc,KAsBF,8BAKR,sBAAKR,UAAU,iBAAf,UACI,sDAGA,kCAAKO,EAAKW,MAAM,KAAKC,OAArB,cAAwCZ,EAAKY,OAA7C,eACA,8BAAI,KAAQZ,EAAKW,MAAM,KAAKC,OAA5B,0BACA,yCACA,4BAAIZ,WCkCLa,EArFM,WAEjB,MAA8Bd,mBAAS,CACnCe,MAAO,QACPC,gBAAiB,UAFrB,mBAAOC,EAAP,KAAgBC,EAAhB,KAKA,EAAsBlB,mBAAS,oBAA/B,mBAAOmB,EAAP,KAAYC,EAAZ,KAsBA,OACI,qCACI,cAAC,EAAD,IACA,sBAAK1B,UAAU,iBAAiB2B,MAAOJ,EAAvC,UACI,0CACA,sBAAKvB,UAAU,YAAYG,GAAG,mBAAmBwB,MAAOJ,EAAxD,UACI,sBAAKvB,UAAU,iBAAiB2B,MAAOJ,EAAvC,UACI,oBAAIvB,UAAU,mBAAmBG,GAAG,aAAawB,MAAOJ,EAAxD,SACI,wBAAQvB,UAAU,mBAAmBE,KAAK,SAAS,iBAAe,WAAW,iBAAe,eAAe,gBAAc,OAAO,gBAAc,cAAcyB,MAAOJ,EAAnK,mCAIJ,qBAAKpB,GAAG,cAAcH,UAAU,mCAAmC,kBAAgB,aAAa,iBAAe,oBAAoB2B,MAAOJ,EAA1I,SACI,qBAAKvB,UAAU,iBAAiB2B,MAAOJ,EAAvC,SACI,2VAMZ,sBAAKvB,UAAU,iBAAiB2B,MAAOJ,EAAvC,UACI,oBAAIvB,UAAU,mBAAmBG,GAAG,aAAawB,MAAOJ,EAAxD,SACI,wBAAQvB,UAAU,6BAA6BE,KAAK,SAAS,iBAAe,WAAW,iBAAe,eAAe,gBAAc,QAAQ,gBAAc,cAAcyB,MAAOJ,EAA9K,mCAIJ,qBAAKpB,GAAG,cAAcH,UAAU,8BAA8B,kBAAgB,aAAa,iBAAe,oBAAoB2B,MAAOJ,EAArI,SACI,qBAAKvB,UAAU,iBAAiB2B,MAAOJ,EAAvC,SACI,sWAKZ,sBAAKvB,UAAU,iBAAf,UACI,oBAAIA,UAAU,mBAAmBG,GAAG,eAApC,SACI,wBAAQH,UAAU,6BAA6BE,KAAK,SAAS,iBAAe,WAAW,iBAAe,iBAAiB,gBAAc,QAAQ,gBAAc,gBAAgByB,MAAOJ,EAAlL,6BAIJ,qBAAKpB,GAAG,gBAAgBH,UAAU,8BAA8B,kBAAgB,eAAe,iBAAe,oBAA9G,SACI,qBAAKA,UAAU,iBAAiB2B,MAAOJ,EAAvC,SACI,uEAOhB,wBAAQrB,KAAK,UAAUF,UAAU,oBAAoBc,QApEhD,WACS,UAAlBS,EAAQF,OACRG,EAAW,CACPH,MAAO,QACPC,gBAAiB,UAErBI,EAAO,uBAGPF,EAAW,CACPH,MAAO,QACPC,gBAAiB,UAErBI,EAAO,uBAuDH,SAAyED,WCzD1EG,EApBQ,WAEnB,OACI,qCACI,cAAC,EAAD,IACA,sBAAK5B,UAAU,iBAAf,UACI,sBAAK6B,MAAM,OAAX,UACI,uBAAOC,IAAI,2BAA2BD,MAAM,aAA5C,2BACA,uBAAO3B,KAAK,QAAQ2B,MAAM,eAAe1B,GAAG,2BAA2B4B,YAAY,wBAEvF,sBAAKF,MAAM,OAAX,UACI,uBAAOC,IAAI,8BAA8BD,MAAM,aAA/C,8BACA,0BAAUA,MAAM,eAAe1B,GAAG,8BAA8BM,KAAK,SAEzE,wBAAQP,KAAK,SAASF,UAAU,oBAAhC,2B,OCmBDgC,MAvBf,WACE,OACE,mCAEE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,aAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,WAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,EAAD,cChBGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f5ff7334.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\n\r\nexport const Nav = () => {\r\n    return (\r\n        <>\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                <div className=\"container-fluid\">\r\n                    <a className=\"navbar-brand\" href=\"/\">Text Modifier</a>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" to=\"/aboutus\">About</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" to=\"/contactus\">Contact </Link>\r\n                            </li>\r\n\r\n\r\n\r\n                        </ul>\r\n\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n\r\n        </>\r\n    )\r\n}\r\nexport default Nav;","import React from 'react'\r\nimport { useState } from 'react'\r\nimport Nav from \"./Nav\"\r\n\r\n\r\n\r\n\r\nexport const TextForm = () => {\r\n    const changeintouppertext = () => {\r\n\r\n        let newtext = text.toUpperCase()\r\n        settext(newtext)\r\n    }\r\n\r\n    const changeintolowerrtext = () => {\r\n\r\n        let newtext = text.toLowerCase()\r\n        settext(newtext)\r\n    }\r\n\r\n    const cleartext = () => {\r\n\r\n        let newtext = \"\"\r\n        settext(newtext)\r\n    }\r\n\r\n    const changetext = (event) => {\r\n        settext(event.target.value)\r\n    }\r\n\r\n    const [text, settext] = useState(\"\")\r\n\r\n\r\n    return (\r\n        <>\r\n            <Nav />\r\n            <div className=\"container \">\r\n                <div className=\"mb-3 mt-3\">\r\n                    <h2>Enter Your Text</h2>\r\n                    <textarea className=\"form-control \" id=\"exampleFormControlTextarea1\" rows=\"8\" value={text} onChange={changetext}></textarea>\r\n                </div>\r\n                <div className=\"container fluid\">\r\n                    <button type=\"button\" id=\"btn1\" className=\"btn btn-dark \" onClick={changeintouppertext}>Change Into Uppercase</button>\r\n                    <button type=\"button\" id=\"btn2\" className=\"btn btn-dark mx-2\" onClick={changeintolowerrtext}>Change Into Lowercase</button>\r\n                    <button type=\"button\" id=\"btn3\" className=\"btn btn-dark mx-2\" onClick={cleartext}>Clear Text</button>\r\n                </div>\r\n\r\n\r\n            </div>\r\n            <div className=\"container mt-3\">\r\n                <h3>\r\n                    Your summery is here\r\n                </h3>\r\n                <p> {text.split(\" \").length} words and {text.length}character</p>\r\n                <p>{0.008 * text.split(\" \").length} Minuts take to read</p>\r\n                <h3>preview</h3>\r\n                <p>{text}</p>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\nexport default TextForm;","import React from 'react'\r\nimport Nav from \"./Nav\"\r\n\r\nimport { useState } from 'react'\r\n\r\nexport const About = () => {\r\n\r\n    const [mystyle, setmystyle] = useState({\r\n        color: \"black\",\r\n        backgroundColor: \"white\"\r\n    })\r\n\r\n    const [btn, setbtn] = useState(\"enable dark mode\")\r\n\r\n    const darkmode = () => {\r\n        if (mystyle.color === \"black\") {\r\n            setmystyle({\r\n                color: \"white\",\r\n                backgroundColor: \"black\"\r\n            })\r\n            setbtn(\"enable white mode\")\r\n        }\r\n        else {\r\n            setmystyle({\r\n                color: \"black\",\r\n                backgroundColor: \"white\"\r\n            })\r\n            setbtn(\"enable white mode\")\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Nav />\r\n            <div className=\"container my-4\" style={mystyle}  >\r\n                <h2>About Us</h2>\r\n                <div className=\"accordion\" id=\"accordionExample\" style={mystyle} >\r\n                    <div className=\"accordion-item\" style={mystyle}>\r\n                        <h2 className=\"accordion-header\" id=\"headingOne\" style={mystyle} >\r\n                            <button className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\" style={mystyle}>\r\n                                Uppercase character\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\" style={mystyle}>\r\n                            <div className=\"accordion-body\" style={mystyle} >\r\n                                <p>\r\n                                    Alternatively referred to as caps and capital, and sometimes abbreviated as UC, uppercase is a typeface of larger characters. For example, typing a, b, and c shows lowercase, and typing A, B, and C shows uppercase. To type in uppercase, you can use either the Caps Lock key or the Shift key on the keyboard.\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"accordion-item\" style={mystyle}>\r\n                        <h2 className=\"accordion-header\" id=\"headingTwo\" style={mystyle}>\r\n                            <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\" style={mystyle}>\r\n                                Lowercase character\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\" style={mystyle}>\r\n                            <div className=\"accordion-body\" style={mystyle}>\r\n                                <p>\r\n                                    Lowercase is the description given to small letters, as opposed to capital letters. For example, the word yes is in all lowercase letters, whereas the word YES is in all uppercase letters. ... Capital letters were usually stored in a higher (or upper) case, and small letters were usually stored below in a lower case.</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"accordion-item\">\r\n                        <h2 className=\"accordion-header\" id=\"headingThree\" >\r\n                            <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\" style={mystyle}>\r\n                                About website\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                            <div className=\"accordion-body\" style={mystyle}>\r\n                                <p >\r\n                                    This is first build website.\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <button type=\"button \" className=\"btn btn-dark my-4\" onClick={darkmode}>{btn}</button>\r\n\r\n            </div>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\nexport default About;","import React from 'react'\r\n\r\nimport Nav from \"./Nav\"\r\n\r\n\r\nexport const Contact = () => {\r\n\r\n    return (\r\n        <>\r\n            <Nav />\r\n            <div className=\"container my-4\">\r\n                <div class=\"mb-3\">\r\n                    <label for=\"exampleFormControlInput1\" class=\"form-label\">Email address</label>\r\n                    <input type=\"email\" class=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"name@example.com\" />\r\n                </div>\r\n                <div class=\"mb-3\">\r\n                    <label for=\"exampleFormControlTextarea1\" class=\"form-label\">Example textarea</label>\r\n                    <textarea class=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\"></textarea>\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-dark mx-2\"  >Submit</button>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\nexport default Contact;","\nimport './App.css';\n\nimport TextForm from './components/TextForm';\nimport About from './components/About';\nimport Contact from './components/Contact';\n\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\n\nfunction App() {\n  return (\n    <>\n\n      <Router>\n        <Switch>\n          <Route path=\"/contactus\">\n            <Contact />\n          </Route>\n          <Route path=\"/aboutus\" >\n            <About />\n          </Route>\n          <Route path=\"/\">\n            <TextForm />\n\n          </Route>\n        </Switch>\n      </Router>\n\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}